# Generated by Django 4.2.7 on 2025-08-02 13:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("authentication", "0001_initial"),
        ("cars", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Inquiry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("buyer_name", models.CharField(max_length=255)),
                (
                    "buyer_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None
                    ),
                ),
                ("buyer_email", models.EmailField(blank=True, max_length=254)),
                ("message", models.TextField()),
                (
                    "preferred_contact_time",
                    models.CharField(
                        choices=[
                            ("morning", "Morning (9 AM - 12 PM)"),
                            ("afternoon", "Afternoon (12 PM - 5 PM)"),
                            ("evening", "Evening (5 PM - 9 PM)"),
                            ("anytime", "Anytime"),
                        ],
                        default="anytime",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("responded", "Responded"),
                            ("closed", "Closed"),
                            ("spam", "Spam"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                ("seller_response", models.TextField(blank=True)),
                ("is_serious_buyer", models.BooleanField(default=True)),
                ("is_spam", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("responded_at", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                (
                    "buyer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_inquiries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inquiries",
                        to="cars.car",
                    ),
                ),
                (
                    "seller",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_inquiries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Inquiry",
                "verbose_name_plural": "Inquiries",
                "db_table": "inquiries",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("inquiry_received", "New Inquiry Received"),
                            ("inquiry_response", "Inquiry Response"),
                            ("car_approved", "Car Listing Approved"),
                            ("car_rejected", "Car Listing Rejected"),
                            ("car_sold", "Car Marked as Sold"),
                            ("saved_search_match", "Saved Search Match"),
                            ("price_drop", "Price Drop Alert"),
                            ("system", "System Notification"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                ("data", models.JSONField(default=dict)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("is_sent_email", models.BooleanField(default=False)),
                ("is_sent_sms", models.BooleanField(default=False)),
                ("is_sent_push", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("scheduled_for", models.DateTimeField(blank=True, null=True)),
                (
                    "car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cars.car",
                    ),
                ),
                (
                    "inquiry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="communication.inquiry",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InquiryResponse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sender_type",
                    models.CharField(
                        choices=[("buyer", "Buyer"), ("seller", "Seller")],
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                ("available_for_call", models.BooleanField(default=False)),
                (
                    "preferred_contact_time",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("morning", "Morning (9 AM - 12 PM)"),
                            ("afternoon", "Afternoon (12 PM - 5 PM)"),
                            ("evening", "Evening (5 PM - 9 PM)"),
                            ("anytime", "Anytime"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "inquiry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="communication.inquiry",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Inquiry Response",
                "verbose_name_plural": "Inquiry Responses",
                "db_table": "inquiry_responses",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("inquiry_received", "Inquiry Received"),
                            ("inquiry_response", "Inquiry Response"),
                            ("car_approved", "Car Approved"),
                            ("car_rejected", "Car Rejected"),
                            ("welcome", "Welcome Email"),
                            ("otp", "OTP Email"),
                        ],
                        max_length=30,
                    ),
                ),
                ("subject", models.CharField(max_length=255)),
                ("html_content", models.TextField()),
                ("text_content", models.TextField(blank=True)),
                ("variables", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentication.adminuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Template",
                "verbose_name_plural": "Email Templates",
                "db_table": "email_templates",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EmailLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("recipient_email", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=255)),
                ("html_content", models.TextField(blank=True)),
                ("text_content", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("bounced", "Bounced"),
                            ("opened", "Opened"),
                            ("clicked", "Clicked"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("external_id", models.CharField(blank=True, max_length=255)),
                ("opened_count", models.PositiveIntegerField(default=0)),
                ("clicked_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cars.car",
                    ),
                ),
                (
                    "inquiry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="communication.inquiry",
                    ),
                ),
                (
                    "notification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="communication.notification",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="communication.emailtemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Log",
                "verbose_name_plural": "Email Logs",
                "db_table": "email_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SMSLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "recipient_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None
                    ),
                ),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("delivered", "Delivered"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("external_id", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                (
                    "notification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="communication.notification",
                    ),
                ),
                (
                    "otp_token",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentication.otptoken",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sms_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS Log",
                "verbose_name_plural": "SMS Logs",
                "db_table": "sms_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "-created_at"],
                        name="sms_logs_recipie_e8f612_idx",
                    ),
                    models.Index(fields=["status"], name="sms_logs_status_3eacc3_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["user", "-created_at"], name="notificatio_user_id_611c58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["type", "is_read"], name="notificatio_type_bfc08d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["scheduled_for"], name="notificatio_schedul_3d00b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inquiry",
            index=models.Index(
                fields=["seller", "status"], name="inquiries_seller__85a62e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inquiry",
            index=models.Index(
                fields=["car", "-created_at"], name="inquiries_car_id_850f79_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inquiry",
            index=models.Index(
                fields=["buyer_phone"], name="inquiries_buyer_p_46e47b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emaillog",
            index=models.Index(
                fields=["recipient", "-created_at"],
                name="email_logs_recipie_1cb1cd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emaillog",
            index=models.Index(fields=["status"], name="email_logs_status_e3be55_idx"),
        ),
        migrations.AddIndex(
            model_name="emaillog",
            index=models.Index(
                fields=["template"], name="email_logs_templat_4d762a_idx"
            ),
        ),
    ]
