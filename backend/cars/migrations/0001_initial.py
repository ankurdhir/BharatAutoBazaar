# Generated by Django 4.2.7 on 2025-08-02 13:16

import cars.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("authentication", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1980),
                            django.core.validators.MaxValueValidator(2026),
                        ]
                    ),
                ),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("petrol", "Petrol"),
                            ("diesel", "Diesel"),
                            ("cng", "CNG"),
                            ("electric", "Electric"),
                            ("hybrid", "Hybrid"),
                            ("lpg", "LPG"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "transmission",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("automatic", "Automatic"),
                            ("cvt", "CVT"),
                            ("amt", "AMT"),
                        ],
                        max_length=10,
                    ),
                ),
                ("km_driven", models.PositiveIntegerField()),
                (
                    "engine_displacement",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "mileage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "owner_number",
                    models.CharField(
                        choices=[
                            ("1st", "1st Owner"),
                            ("2nd", "2nd Owner"),
                            ("3rd", "3rd Owner"),
                            ("4th+", "4th+ Owner"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "exterior_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("average", "Average"),
                            ("poor", "Poor"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "interior_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("average", "Average"),
                            ("poor", "Poor"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "engine_condition",
                    models.CharField(
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("average", "Average"),
                            ("poor", "Poor"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "accident_history",
                    models.CharField(default="No Accident", max_length=255),
                ),
                ("price", models.PositiveIntegerField()),
                ("original_price", models.PositiveIntegerField(blank=True, null=True)),
                ("negotiable", models.BooleanField(default=True)),
                ("area", models.CharField(blank=True, max_length=100)),
                ("address", models.TextField(blank=True)),
                ("seller_name", models.CharField(max_length=255)),
                ("seller_phone", models.CharField(max_length=20)),
                ("seller_email", models.EmailField(blank=True, max_length=254)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("features", models.JSONField(default=list)),
                ("registration_number", models.CharField(blank=True, max_length=20)),
                ("registration_state", models.CharField(blank=True, max_length=100)),
                ("registration_date", models.DateField(blank=True, null=True)),
                ("insurance_valid", models.BooleanField(default=False)),
                ("insurance_expiry", models.DateField(blank=True, null=True)),
                ("rc_transfer_available", models.BooleanField(default=True)),
                ("specifications", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("sold", "Sold"),
                            ("inactive", "Inactive"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verified", models.BooleanField(default=False)),
                ("featured", models.BooleanField(default=False)),
                (
                    "urgency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("week", "Within a Week"),
                            ("month", "Within a Month"),
                            ("flexible", "Flexible"),
                        ],
                        default="month",
                        max_length=20,
                    ),
                ),
                (
                    "quality_score",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(100)],
                    ),
                ),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("inquiries_count", models.PositiveIntegerField(default=0)),
                ("favorites_count", models.PositiveIntegerField(default=0)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True)),
                ("admin_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("sold_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Car",
                "verbose_name_plural": "Cars",
                "db_table": "cars",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CarBrand",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="brands/")),
                ("is_active", models.BooleanField(default=True)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Car Brand",
                "verbose_name_plural": "Car Brands",
                "db_table": "car_brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CarModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("slug", models.SlugField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="models",
                        to="cars.carbrand",
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Model",
                "verbose_name_plural": "Car Models",
                "db_table": "car_models",
                "ordering": ["name"],
                "unique_together": {("brand", "name")},
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("car_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "db_table": "cities",
                "ordering": ["name"],
                "unique_together": {("name", "state")},
            },
        ),
        migrations.CreateModel(
            name="CarVideo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "video",
                    models.FileField(upload_to=cars.models.car_video_upload_path),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="cars/video_thumbnails/"
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("duration", models.PositiveIntegerField(blank=True, null=True)),
                ("file_size", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="cars.car",
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Video",
                "verbose_name_plural": "Car Videos",
                "db_table": "car_videos",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CarVariant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="cars.carmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Variant",
                "verbose_name_plural": "Car Variants",
                "db_table": "car_variants",
                "ordering": ["name"],
                "unique_together": {("car_model", "name")},
            },
        ),
        migrations.CreateModel(
            name="CarImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to=cars.models.car_image_upload_path),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="cars/thumbnails/"
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("alt_text", models.CharField(blank=True, max_length=255)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_primary", models.BooleanField(default=False)),
                ("file_size", models.PositiveIntegerField(blank=True, null=True)),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="cars.car",
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Image",
                "verbose_name_plural": "Car Images",
                "db_table": "car_images",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.AddField(
            model_name="car",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="cars.carbrand"
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="car_model",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="cars.carmodel"
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="city",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="cars.city"
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_cars",
                to="authentication.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="seller",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cars",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="variant",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="cars.carvariant",
            ),
        ),
        migrations.CreateModel(
            name="CarView",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("viewed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="view_logs",
                        to="cars.car",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Car View",
                "verbose_name_plural": "Car Views",
                "db_table": "car_views",
                "ordering": ["-viewed_at"],
                "unique_together": {("car", "user", "ip_address")},
            },
        ),
        migrations.CreateModel(
            name="CarFavorite",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "car",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="cars.car",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Car Favorite",
                "verbose_name_plural": "Car Favorites",
                "db_table": "car_favorites",
                "ordering": ["-created_at"],
                "unique_together": {("user", "car")},
            },
        ),
        migrations.AddIndex(
            model_name="car",
            index=models.Index(
                fields=["status", "verified"], name="cars_status_0633dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="car",
            index=models.Index(
                fields=["brand", "car_model"], name="cars_brand_i_bb8d79_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="car",
            index=models.Index(
                fields=["city", "price"], name="cars_city_id_ed4cbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="car",
            index=models.Index(
                fields=["fuel_type", "transmission"], name="cars_fuel_ty_40a0e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="car",
            index=models.Index(fields=["-created_at"], name="cars_created_decc9d_idx"),
        ),
    ]
