# Generated by Django 4.2.7 on 2025-08-02 13:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("authentication", "0001_initial"),
        ("cars", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("value", models.TextField()),
                (
                    "value_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("boolean", "Boolean"),
                            ("json", "JSON"),
                        ],
                        default="string",
                        max_length=10,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("category", models.CharField(default="general", max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="authentication.adminuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "System Configuration",
                "verbose_name_plural": "System Configurations",
                "db_table": "system_configurations",
                "ordering": ["category", "key"],
            },
        ),
        migrations.CreateModel(
            name="CarFeature",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("safety", "Safety"),
                            ("comfort", "Comfort"),
                            ("convenience", "Convenience"),
                            ("entertainment", "Entertainment"),
                            ("exterior", "Exterior"),
                            ("interior", "Interior"),
                            ("engine", "Engine"),
                            ("technology", "Technology"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Car Feature",
                "verbose_name_plural": "Car Features",
                "db_table": "car_features",
                "ordering": ["category", "name"],
                "indexes": [
                    models.Index(
                        fields=["category"], name="car_feature_categor_78647e_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="car_feature_is_acti_9f8825_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.TextField()),
                ("filters", models.JSONField(default=dict)),
                ("results_count", models.PositiveIntegerField(default=0)),
                ("session_id", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("page_number", models.PositiveIntegerField(default=1)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="search_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Search Query",
                "verbose_name_plural": "Search Queries",
                "db_table": "search_queries",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="search_quer_user_id_486cee_idx",
                    ),
                    models.Index(
                        fields=["-created_at"], name="search_quer_created_824a49_idx"
                    ),
                    models.Index(fields=["query"], name="search_quer_query_50e46f_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="FileUpload",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("original_filename", models.CharField(max_length=255)),
                ("file_path", models.CharField(max_length=500)),
                ("file_size", models.PositiveIntegerField()),
                ("mime_type", models.CharField(max_length=100)),
                ("file_hash", models.CharField(blank=True, max_length=64)),
                (
                    "upload_type",
                    models.CharField(
                        choices=[
                            ("car_image", "Car Image"),
                            ("car_video", "Car Video"),
                            ("user_avatar", "User Avatar"),
                            ("brand_logo", "Brand Logo"),
                            ("document", "Document"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploading", "Uploading"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="uploading",
                        max_length=20,
                    ),
                ),
                ("processing_progress", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
                ("duration", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cars.car",
                    ),
                ),
                (
                    "uploader",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "File Upload",
                "verbose_name_plural": "File Uploads",
                "db_table": "file_uploads",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["uploader", "-created_at"],
                        name="file_upload_uploade_5ad73f_idx",
                    ),
                    models.Index(
                        fields=["status"], name="file_upload_status_0d0c79_idx"
                    ),
                    models.Index(
                        fields=["upload_type"], name="file_upload_upload__5d821b_idx"
                    ),
                    models.Index(fields=["car"], name="file_upload_car_id_0dad84_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="EMICalculation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("principal", models.PositiveIntegerField()),
                ("interest_rate", models.DecimalField(decimal_places=2, max_digits=5)),
                ("tenure", models.PositiveIntegerField()),
                ("emi", models.PositiveIntegerField()),
                ("total_amount", models.PositiveIntegerField()),
                ("total_interest", models.PositiveIntegerField()),
                ("session_id", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "car",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cars.car",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emi_calculations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "EMI Calculation",
                "verbose_name_plural": "EMI Calculations",
                "db_table": "emi_calculations",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="emi_calcula_user_id_fa5387_idx",
                    ),
                    models.Index(fields=["car"], name="emi_calcula_car_id_ee630d_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="APIRateLimit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("endpoint", models.CharField(max_length=255)),
                ("request_count", models.PositiveIntegerField(default=1)),
                ("window_start", models.DateTimeField(auto_now_add=True)),
                ("last_request", models.DateTimeField(auto_now=True)),
                ("is_blocked", models.BooleanField(default=False)),
                ("blocked_until", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rate_limits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API Rate Limit",
                "verbose_name_plural": "API Rate Limits",
                "db_table": "api_rate_limits",
                "indexes": [
                    models.Index(
                        fields=["user", "endpoint"],
                        name="api_rate_li_user_id_e360be_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "endpoint"],
                        name="api_rate_li_ip_addr_1bc87b_idx",
                    ),
                    models.Index(
                        fields=["window_start"], name="api_rate_li_window__1f5273_idx"
                    ),
                ],
                "unique_together": {("user", "endpoint"), ("ip_address", "endpoint")},
            },
        ),
    ]
