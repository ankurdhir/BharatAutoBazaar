# Generated by Django 4.2.7 on 2025-08-02 13:17

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AdminActivity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("car_approve", "Car Approved"),
                            ("car_reject", "Car Rejected"),
                            ("car_flag", "Car Flagged"),
                            ("user_suspend", "User Suspended"),
                            ("user_activate", "User Activated"),
                            ("config_change", "Configuration Change"),
                            ("bulk_action", "Bulk Action"),
                            ("report_generate", "Report Generated"),
                            ("moderation_action", "Moderation Action"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("metadata", models.JSONField(default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Admin Activity",
                "verbose_name_plural": "Admin Activities",
                "db_table": "admin_activities",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BulkAction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("approve_cars", "Bulk Approve Cars"),
                            ("reject_cars", "Bulk Reject Cars"),
                            ("delete_cars", "Bulk Delete Cars"),
                            ("suspend_users", "Bulk Suspend Users"),
                            ("activate_users", "Bulk Activate Users"),
                            ("send_notifications", "Bulk Send Notifications"),
                            ("update_prices", "Bulk Update Prices"),
                            ("feature_cars", "Bulk Feature Cars"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField()),
                ("selection_criteria", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Queued"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="queued",
                        max_length=20,
                    ),
                ),
                ("total_items", models.PositiveIntegerField(default=0)),
                ("processed_items", models.PositiveIntegerField(default=0)),
                ("successful_items", models.PositiveIntegerField(default=0)),
                ("failed_items", models.PositiveIntegerField(default=0)),
                ("results", models.JSONField(default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Bulk Action",
                "verbose_name_plural": "Bulk Actions",
                "db_table": "bulk_actions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CarReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("approve", "Approve"),
                            ("reject", "Reject"),
                            ("request_changes", "Request Changes"),
                            ("flag", "Flag for Review"),
                            ("feature", "Mark as Featured"),
                            ("unfeature", "Remove Featured"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reason", models.CharField(blank=True, max_length=255)),
                ("feedback", models.TextField(blank=True)),
                ("internal_notes", models.TextField(blank=True)),
                ("suggested_price", models.PositiveIntegerField(blank=True, null=True)),
                ("price_feedback", models.TextField(blank=True)),
                (
                    "quality_score",
                    models.PositiveIntegerField(
                        blank=True, help_text="Quality score out of 100", null=True
                    ),
                ),
                (
                    "completeness_score",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Listing completeness score out of 100",
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("requires_follow_up", models.BooleanField(default=False)),
                ("follow_up_date", models.DateTimeField(blank=True, null=True)),
                (
                    "photos_quality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("acceptable", "Acceptable"),
                            ("poor", "Poor"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description_quality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("acceptable", "Acceptable"),
                            ("poor", "Poor"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "pricing_appropriateness",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("acceptable", "Acceptable"),
                            ("overpriced", "Overpriced"),
                            ("underpriced", "Underpriced"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Car Review",
                "verbose_name_plural": "Car Reviews",
                "db_table": "car_reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ModerationQueue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("car_listing", "Car Listing"),
                            ("user_profile", "User Profile"),
                            ("inquiry", "Inquiry"),
                            ("user_report", "User Report"),
                            ("content_flag", "Content Flag"),
                        ],
                        max_length=20,
                    ),
                ),
                ("item_id", models.UUIDField()),
                ("item_title", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("escalated", "Escalated"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("issue_description", models.TextField()),
                ("resolution", models.TextField(blank=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("escalated_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Moderation Queue Item",
                "verbose_name_plural": "Moderation Queue",
                "db_table": "moderation_queue",
                "ordering": ["priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SystemAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("error", "System Error"),
                            ("warning", "Warning"),
                            ("info", "Information"),
                            ("security", "Security Alert"),
                            ("performance", "Performance Issue"),
                            ("maintenance", "Maintenance Required"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("metadata", models.JSONField(default=dict)),
                ("source", models.CharField(blank=True, max_length=100)),
                ("is_acknowledged", models.BooleanField(default=False)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "System Alert",
                "verbose_name_plural": "System Alerts",
                "db_table": "system_alerts",
                "ordering": ["-created_at"],
            },
        ),
    ]
